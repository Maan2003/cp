#include <bits/stdc++.h>
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++(i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++(i))
#define REP_R(i, n) for (int i = (int)(n)-1; (i) >= 0; --(i))
#define REP3R(i, m, n) for (int i = (int)(n)-1; (i) >= (int)(m); --(i))
#define PB push_back
#define SH std::cout <<
#define LN << '\n'
#define RD std::cin >>
#define va std::vector<auto>

using namespace std;
typedef std::vector<int> vi;
template <typename _A, typename _B> using umap = unordered_map<_A, _B>;
template <typename T> using v = vector<T>;

template <typename T> void RD_VC(v<T> &a, int n) {}

auto solve(string &s, string &t) {
  std::sort(s.begin(), s.end());
  int ti = 0;
  int i = 0;

  if (t != "abc") {
    cout << s << endl;
    return;
  }

  int last_c = -1;
  for (int i = 0; i < s.size(); i++) {
    if (s[i] == 'c') {
      last_c = i;
    }
  }

  int bi = 0;
  bool has_a = false;
  for (int j = 0; j < s.size(); j++) {
    if (s[j] == 'b' && has_a && last_c != -1) {
      bi++;
    } else {
      cout << s[j];
    }
    if (s[j] == 'a') {
      has_a = true;
    }
    if (j == last_c) {
      REP(k, bi) { cout << "b"; }
    }
  }
  cout << endl;
}

// generated by oj-template v4.8.1
// (https://github.com/online-judge-tools/template-generator)
int main() {
  std::ios::sync_with_stdio(false);
  std::cin.tie(nullptr);
  int testcases;
  std::cin >> testcases;
  while (testcases--) {
    string s, t;
    std::cin >> s >> t;
    solve(s, t);
  }
  return 0;
}
