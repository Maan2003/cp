#include <bits/stdc++.h>
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++(i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++(i))
#define REP_R(i, n) for (int i = (int)(n)-1; (i) >= 0; --(i))
#define REP3R(i, m, n) for (int i = (int)(n)-1; (i) >= (int)(m); --(i))
#define PB push_back
#define SH std::cout <<
#define LN << '\n'
#define RD std::cin >>
#define va std::vector<auto>

using namespace std;
typedef std::vector<int> vi;
template <typename _A, typename _B> using umap = unordered_map<_A, _B>;
template <typename T> using v = vector<T>;

template <typename T> void RD_VC(v<T> &a, int n) {}

int solve(int a, int b, int c) {
  vi v = {a, b, c};
  auto s = [&]() { sort(v.begin(), v.end()); };
  s();
  int cnt = v[0];
  v[1] -= cnt;
  v[2] -= cnt;

  int extra = v[2] - v[1];
  if (extra >= v[1]) {
    extra -= v[1];
    cnt += min((extra / 3), cnt);
    cnt += v[1];
  } else {
    int lefts = v[1] - extra;
    cnt += (2 * lefts) / 3;
    cnt += extra;
  }
  return cnt;
}

// generated by oj-template v4.8.1
// (https://github.com/online-judge-tools/template-generator)
int main() {
  std::ios::sync_with_stdio(false);
  std::cin.tie(nullptr);
  int64_t a, b, c;
  std::cin >> a >> b >> c;
  auto ans = solve(a, b, c);
  std::cout << ans << '\n';
  return 0;
}
