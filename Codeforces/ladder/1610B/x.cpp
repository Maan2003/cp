#include <bits/stdc++.h>
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++(i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++(i))
#define REP_R(i, n) for (int i = (int)(n)-1; (i) >= 0; --(i))
#define REP3R(i, m, n) for (int i = (int)(n)-1; (i) >= (int)(m); --(i))
#define PB push_back
#define SH std::cout <<
#define LN << '\n'
#define RD std::cin >>
#define va std::vector<auto>

using namespace std;
typedef std::vector<int> vi;
template <typename _A, typename _B> using umap = unordered_map<_A, _B>;
template <typename T> using v = vector<T>;

template <typename T> void RD_VC(v<T> &a, int n) {}

const std::string YES = "YES";
const std::string NO = "NO";
auto solve(vi &a) {
  int l = 0;
  int r = a.size() - 1;
  bool found = false;
  while (l < r) {
    if (a[l] != a[r]) {
      found = true;
      break;
    }
    l++;
    r--;
  }
  if (!found) {
    return true;
  }

  bool ans = true;
  // try solving by deleting the left elemeent
  {
    int l1 = l;
    int r2 = r;
    while (l1 < r2) {
      if (a[l1] == a[l]) {
        l1++;
        continue;
      }
      if (a[r2] == a[l]) {
        r2--;
        continue;
      }

      if (a[l1] != a[r2]) {
        ans = false;
      }
      l1++;
      r2--;
    }
    if (ans) {
      return true;
    }
  }

  {
    int l1 = l;
    int r2 = r;
    while (l1 < r2) {
      if (a[l1] == a[r]) {
        l1++;
        continue;
      }

      if (a[r2] == a[r]) {
        r2--;
        continue;
      }

      if (a[l1] != a[r2]) {
        ans = false;
      }
      l1++;
      r2--;
    }
    if (ans) {
      return true;
    }
  }

  return false;
}

// generated by oj-template v4.8.1
// (https://github.com/online-judge-tools/template-generator)
int main() {
  std::ios::sync_with_stdio(false);
  std::cin.tie(nullptr);
  int testcases;
  std::cin >> testcases;
  while (testcases--) {
    int n;
    std::cin >> n;
    vi a(n);
    REP(i, n) { std::cin >> a[i]; }
    bool ans = solve(a);
    std::cout << (ans ? YES : NO)LN;
  }
  return 0;
}
