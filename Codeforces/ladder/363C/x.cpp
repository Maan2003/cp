#include <bits/stdc++.h>
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++(i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++(i))
#define REP_R(i, n) for (int i = (int)(n)-1; (i) >= 0; --(i))
#define REP3R(i, m, n) for (int i = (int)(n)-1; (i) >= (int)(m); --(i))
#define PB push_back
#define SH std::cout <<
#define LN << '\n'
#define RD std::cin >>
#define va std::vector<auto>

using namespace std;
typedef std::vector<int> vi;
template <typename _A, typename _B> using umap = unordered_map<_A, _B>;
template <typename T> using v = vector<T>;

template <typename T> void RD_VC(v<T> &a, int n) {}

bool del[200001];
std::string solve(std::string a) {
  REP(i, a.size()) del[i] = false;
  string b;
  // eliminate triples
  REP(i, a.size() - 2) {
    char v = a[i];
    // found a triple
    if (v == a[i + 1] && v == a[i + 2]) {
      del[i] = true;
    }
  }
  REP(i, a.size()) {
    if (!del[i]) {
      b += a[i];
    }
  }

  REP(i, b.size()) del[i] = false;
  // eliminate doubles
  REP(i, b.size() - 3) {
    char v1 = b[i];
    char v2 = b[i + 2];
    if (v1 == b[i + 1] && v2 == b[i + 3]) {
      del[i + 2] = true;
      // lets bump it by 3 this time
      i += 2;
    }
  }
  string c;
  REP(i, b.size()) {
    if (!del[i]) {
      c += b[i];
    }
  }
  return c;
}

// generated by oj-template v4.8.1
// (https://github.com/online-judge-tools/template-generator)
int main() {
  std::ios::sync_with_stdio(false);
  std::cin.tie(nullptr);
  std::string a;
  std::cin >> a;
  auto ans = solve(a);
  std::cout << ans << '\n';
  return 0;
}
