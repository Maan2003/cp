#include <bits/stdc++.h>
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++(i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++(i))
#define REP_R(i, n) for (int i = (int)(n)-1; (i) >= 0; --(i))
#define REP3R(i, m, n) for (int i = (int)(n)-1; (i) >= (int)(m); --(i))
#define PB push_back
#define SH std::cout <<
#define LN << '\n'
#define RD std::cin >>
#define va std::vector<auto>

using namespace std;
typedef std::vector<int> vi;
template <typename _A, typename _B>
using umap = unordered_map<_A, _B>;
template <typename T>
using v = vector<T>;

#define int int64_t

template <typename T>
void RD_VC(v<T> &a, int n) {}

void solve(int k, int64_t x, string s) {
    vi a;
    x -= 1;
    REP (i, s.size()) {
        if (s[i] == 'a') continue;
        if (i == 0 || s[i - 1] == 'a') {
            a.PB(k);
        } else {
            a.back() += k;
        }
    }

    vi sa(a.size());
    if (a.size() > 0) sa[a.size() - 1] = 1;
    REP_R (i, a.size() - 1) { sa[i] = sa[i + 1] * (a[i + 1] + 1); }

    vi result(a.size());

    REP (i, a.size()) {
        int val = x / sa[i];
        result[i] = val;
        x %= sa[i];
    }
    int j = 0;
    for (int i = 0; i < s.size(); i++) {
        if (s[i] == 'a') {
            cout << s[i];
        } else if (i == 0 || s[i - 1] == 'a') {
            REP (_, result[j]) { cout << 'b'; }
            j++;
        }
    }

    cout << endl;
}

// generated by oj-template v4.8.1
// (https://github.com/online-judge-tools/template-generator)
int32_t main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
    int testcases;
    std::cin >> testcases;
    REP (i, testcases) {
        int64_t n, k, x;
        cin >> n >> k >> x;
        string s;
        cin >> s;
        solve(k, x, s);
    }
    return 0;
}
