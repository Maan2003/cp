#include <bits/stdc++.h>
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++(i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++(i))
#define REP_R(i, n) for (int i = (int)(n)-1; (i) >= 0; --(i))
#define REP3R(i, m, n) for (int i = (int)(n)-1; (i) >= (int)(m); --(i))
#define PB push_back
#define SH std::cout <<
#define LN << '\n'
#define RD std::cin >>
#define va std::vector<auto>

using namespace std;
typedef std::vector<int> vi;
template <typename _A, typename _B> using umap = unordered_map<_A, _B>;
template <typename T> using v = vector<T>;

template <typename T> void RD_VC(v<T> &a, int n) {}

int64_t solve(const std::vector<int64_t> &a) {
  // try odd numbers
  {
    int64_t g = a[0];
    for (int i = 2; i < a.size(); i += 2) {
      g = __gcd(g, a[i]);
    }
    bool div = true;
    for (int i = 1; i < a.size(); i += 2) {
      if (a[i] % g == 0) {
        div = false;
        break;
      }
    }
    if (div) {
      return g;
    }
  }

  // now for even numbers
  {
    int64_t g = a[1];
    for (int i = 3; i < a.size(); i += 2) {
      g = __gcd(g, a[i]);
    }

    bool div = true;
    for (int i = 0; i < a.size(); i += 2) {
      if (a[i] % g == 0) {
        div = false;
        break;
      }
    }
    if (div) return g;
  }
  return 0;
}

// generated by oj-template v4.8.1
// (https://github.com/online-judge-tools/template-generator)
int main() {
  std::ios::sync_with_stdio(false);
  std::cin.tie(nullptr);
  // failed to analyze input format
  // TODO: edit here
  int n;
  std::cin >> n;
  while (n--) {
    int x;
    std::cin >> x;
    std::vector<int64_t> a(x);
    for (int i = 0; i < x; i++) {
      std::cin >> a[i];
    }
    std::cout << solve(a) LN;
  }
  return 0;
}
