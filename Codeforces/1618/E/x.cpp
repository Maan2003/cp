#include <bits/stdc++.h>
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++(i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++(i))
#define REP_R(i, n) for (int i = (int)(n)-1; (i) >= 0; --(i))
#define REP3R(i, m, n) for (int i = (int)(n)-1; (i) >= (int)(m); --(i))
#define PB push_back
#define SH std::cout <<
#define LN << '\n'
#define RD std::cin >>
#define va std::vector<auto>

using namespace std;
typedef std::vector<int64_t> vi;
template <typename _A, typename _B> using umap = unordered_map<_A, _B>;
template <typename T> using v = vector<T>;

template <typename T> void RD_VC(v<T> &a, int n) {}

const std::string YES = "YES";
const std::string NO = "NO";

void solve(vi b) {
  int64_t sum = accumulate(b.begin(), b.end(), 0LL);
  int64_t fact = (b.size() * (b.size() + 1)) / 2;
  if (sum % fact != 0) {
    cout << NO LN;
    return;
  }

  sum /= fact;

  vi a(b.size());
  REP(i, b.size()) {
    int i_last = i == 0 ? b.size() - 1 : i - 1;
    int64_t val = b[i] - b[i_last];
    val = (sum - val) / b.size();
    a[i] = val;
  }

  cout << YES LN;
  // show a space separated list of integers
  REP(i, a.size()) cout << a[i] << " ";
  SH '\n';
}

// generated by oj-template v4.8.1
// (https://github.com/online-judge-tools/template-generator)
int main() {
  std::ios::sync_with_stdio(false);
  std::cin.tie(nullptr);
  // failed to analyze input format
  // TODO: edit here
  int t;
  std::cin >> t;
  while (t--) {
    int n;
    std::cin >> n;
    vi b(n);
    REP(i, n) { std::cin >> b[i]; }
    solve(b);
  }
  return 0;
}
