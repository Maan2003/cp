#include <bits/stdc++.h>
#include <climits>
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++(i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++(i))
#define REP_R(i, n) for (int i = (int)(n)-1; (i) >= 0; --(i))
#define REP3R(i, m, n) for (int i = (int)(n)-1; (i) >= (int)(m); --(i))
#define PB push_back
#define SH std::cout <<
#define LN << '\n'
#define RD std::cin >>
#define va std::vector<auto>

using namespace std;
typedef std::vector<int> vi;
template <typename _A, typename _B> using umap = unordered_map<_A, _B>;
template <typename T> using v = vector<T>;

template <typename T> void RD_VC(v<T> &a, int n) {}

auto solve(int k, vi &a) {
  sort(a.begin(), a.end());
  int64_t dist = 0;
  int len = a.size();
  int last = a[len - 1];
  // lets remove last k elements
  if (last < 0) {
    return INT64_MAX;
  }
  int t = k;
  while (len > 0 && a[len - 1] >= 0 && t-- > 0) {
    len--;
  }
  dist += last;

  // keep remove k elements from the end
  while (len > 0 && a[len - 1] >= 0) {
    dist += 2 * a[len - 1];
    int t = k;
    while (len > 0 && a[len - 1] >= 0 && t-- > 0) {
      len--;
    }
  }
  a.resize(len);
  REP(i, len) { a[i] = -a[i]; }
  sort(a.begin(), a.end());
  // keep remove k elements from the end
  while (len > 0 && a[len - 1] >= 0) {
    dist += 2 * a[len - 1];
    int t = k;
    while (len > 0 && a[len - 1] >= 0 && t-- > 0) {
      len--;
    }
  }
  return dist;
}

// generated by oj-template v4.8.1
// (https://github.com/online-judge-tools/template-generator)
int main() {
  std::ios::sync_with_stdio(false);
  std::cin.tie(nullptr);
  // failed to analyze input format
  // TODO: edit here
  int t;
  cin >> t;
  REP(i, t) {
    int n, k;
    cin >> n >> k;
    vi a(n);
    vi b(n);
    REP(i, n) {
      cin >> a[i];
      b[i] = -a[i];
    }
    cout << min(solve(k, a), solve(k, b)) LN;
  }
  return 0;
}
