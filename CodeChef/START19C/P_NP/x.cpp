#include <bits/stdc++.h>
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++(i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++(i))
#define REP_R(i, n) for (int i = (int)(n)-1; (i) >= 0; --(i))
#define REP3R(i, m, n) for (int i = (int)(n)-1; (i) >= (int)(m); --(i))
#define PB push_back
#define SH std::cout <<
#define LN << '\n'
#define RD std::cin >>
#define va std::vector<auto>

using namespace std;
typedef std::vector<int> vi;
template <typename _A, typename _B> using umap = unordered_map<_A, _B>;
template <typename T> using v = vector<T>;

template <typename T> void RD_VC(v<T> &a, int n) {}

int solve(string &s) {
  int ans = 0;
  int np_extra = 0;
  if (s[0] == 'P')
    np_extra--;

  REP3(i, 1, s.size()) {
    // N preceded by N or the last N
    if (s[i] == 'N' && (s[i - 1] == 'N' | i == s.size() - 1)) {
      ans++;
      s[i] = 'P';
    }
    if (s[i] == 'P' && s[i - 1] == 'N') {
      np_extra++;
    } else if (s[i] == 'P') {
      np_extra--;
    }
  }
  return ans + abs(np_extra) / 3;
}

// generated by oj-template v4.8.1
// (https://github.com/online-judge-tools/template-generator)
int main() {
  std::ios::sync_with_stdio(false);
  std::cin.tie(nullptr);
  int a;
  std::cin >> a;
  while (a--) {
    string s;
    std::cin >> s;
    std::cout << solve(s) << std::endl;
  }
  return 0;
}
