#include <bits/stdc++.h>
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++(i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++(i))
#define REP_R(i, n) for (int i = (int)(n)-1; (i) >= 0; --(i))
#define REP3R(i, m, n) for (int i = (int)(n)-1; (i) >= (int)(m); --(i))
#define PB push_back
#define SH std::cout <<
#define LN << '\n'
#define RD std::cin >>
#define va std::vector<auto>

using namespace std;
typedef std::vector<int> vi;
template <typename _A, typename _B> using umap = unordered_map<_A, _B>;
template <typename T> using v = vector<T>;

template <typename T> void RD_VC(v<T> &a, int n) {}
#define MOD 1000000007

int solve(vi &elems) {
  // iterator through the array and put the elements in a unordered map to count
  // the number of times each element appears
  umap<int, int> m;
  for (auto &e : elems) {
    m[e]++;
  }
  int64_t ways = 1;
  // iterator through the map
  for (const auto &p : m) {
    ways = (ways * (p.second + 1)) % MOD;
  }
  return ways - 1;
}

// generated by oj-template v4.8.1
// (https://github.com/online-judge-tools/template-generator)
int main() {
  std::ios::sync_with_stdio(false);
  std::cin.tie(nullptr);
  int a;
  std::cin >> a;
  REP(_, a) {
    int n;
    std::cin >> n;
    vi elems(n);
    REP(i, n) { std::cin >> elems[i]; }
    SH solve(elems) LN;
  }
  return 0;
}
