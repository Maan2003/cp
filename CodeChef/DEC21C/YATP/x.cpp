#include <bits/stdc++.h>
#include <cstdint>
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++(i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++(i))
#define REP_R(i, n) for (int i = (int)(n)-1; (i) >= 0; --(i))
#define REP3R(i, m, n) for (int i = (int)(n)-1; (i) >= (int)(m); --(i))
#define PB push_back
#define SH std::cout <<
#define LN << '\n'
#define RD std::cin >>
#define va std::vector<auto>

using namespace std;
typedef std::vector<int> vi;
template <typename _A, typename _B> using umap = unordered_map<_A, _B>;
template <typename T> using v = vector<T>;
using pi = pair<int, int>;

#define N (100000)
int levels[N];
int parents[N];
int weights[N];
int vs[N];

map<pi, int> cache;
int solve(int n, int m, int ln, int lm) {
  if (n == -1 || m == -1)
    return 0;
  if (n == m)
    return 0;

  int ans = 0;
  if (ln >= lm) {
    ans = max(weights[n], solve(parents[n], m, ln - 1, lm));
  } else if (lm > ln) {
    ans = max(weights[m], solve(n, parents[m], ln, lm - 1));
  }
  return ans;
}

// generated by oj-template v4.8.1
// (https://github.com/online-judge-tools/template-generator)
int main() {
  std::ios::sync_with_stdio(false);
  std::cin.tie(nullptr);
  // failed to analyze input format
  // TODO: edit here
  int T, n, q;
  std::cin >> T;
  REP(_, T) {
    cin >> n >> q;
    parents[0] = -1;
    levels[0] = 0;
    weights[0] = 0;
    cache.clear();
    REP3(i, 1, n) {
      cin >> parents[i];
      parents[i]--;
      levels[i] = levels[parents[i]] + 1;
    }
    REP3(i, 1, n) { cin >> weights[i]; }
    REP(_, q) {
      int ki;
      cin >> ki;
      REP(i, ki) { cin >> vs[i]; }
      int res = 0;
      REP(i, ki - 1) {
        REP3(j, i + 1, ki) {
          res += solve(vs[i], vs[j], levels[vs[i]], levels[vs[j]]);
        }
      }
      SH res << " ";
    }
  }
  return 0;
}
