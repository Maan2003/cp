#include <bits/stdc++.h>
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++(i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++(i))
#define REP_R(i, n) for (int i = (int)(n)-1; (i) >= 0; --(i))
#define REP3R(i, m, n) for (int i = (int)(n)-1; (i) >= (int)(m); --(i))
#define PB push_back
#define SH std::cout <<
#define LN << '\n'
#define RD std::cin >>
#define va std::vector<auto>

using namespace std;
typedef std::vector<int> vi;
template <typename _A, typename _B>
using umap = unordered_map<_A, _B>;
template <typename T>
using v = vector<T>;

template <typename T>
void RD_VC(v<T> &a, int n) {}

std::pair<char, char> solve(auto a, const std::vector<auto> &b, const std::vector<std::vector<auto> > &c, const std::vector<std::vector<auto> > &d) {
    // TODO: edit here
}

// generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
    auto a;
    std::cin >> a;
    std::vector<auto> b(a);
    std::vector<std::vector<auto> > c(a, std::vector<auto>((a))), d(a, std::vector<auto>((a)));
    REP (i, a) {
        std::cin >> b[i];
        REP (j, i) { std::cin >> c[i][j] >> d[i][j]; }
    }
    auto [a, b] = solve(a, b, c, d);
    std::cout << a << ' ' << b << '\n';
    return 0;
}
