#include <bits/stdc++.h>
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++(i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++(i))
#define REP_R(i, n) for (int i = (int)(n)-1; (i) >= 0; --(i))
#define REP3R(i, m, n) for (int i = (int)(n)-1; (i) >= (int)(m); --(i))
#define PB push_back
#define SH std::cout <<
#define LN << '\n'
#define RD std::cin >>
#define va std::vector<auto>

using namespace std;
typedef std::vector<int> vi;
template <typename _A, typename _B>
using umap = unordered_map<_A, _B>;
template <typename T>
using v = vector<T>;

template <typename T>
void RD_VC(v<T> &a, int n) {}
char winner(char a, char b) {
    if (a == b) return a;
    if (a == 'R' && b == 'S') return 'R';
    if (a == 'S' && b == 'P') return 'S';
    if (a == 'P' && b == 'R') return 'P';
    return winner(b, a);
}

int idx(char c) {
    if (c == 'R') return 0;
    if (c == 'S') return 1;
    if (c == 'P') return 2;
    return -1;
}

char D[500000][3] = {'\0'};

int n;

char do_it(string &s, int i, char c) {
    if (n - i <= 1) return c;
    if (D[i][idx(c)] != '\0') return D[i][idx(c)];
    char ans = do_it(s, i + 1, winner(c, s[i + 1]));
    D[i][idx(c)] = ans;
    return ans;
}

void solve(string &s) {
    memset(D, '\0', sizeof(D));
    for (int i = 0; i < n; i++) {
        cout << do_it(s, i, s[i]);
    }
    cout << endl;
}

// generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
    int a;
    std::cin >> a;
    REP(i, a) {
        cin >> n;
        string s;
        cin >> s;
        solve(s);
    }
    return 0;
}
