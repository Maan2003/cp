#include <bits/stdc++.h>
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++(i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++(i))
#define REP_R(i, n) for (int i = (int)(n)-1; (i) >= 0; --(i))
#define REP3R(i, m, n) for (int i = (int)(n)-1; (i) >= (int)(m); --(i))
#define PB push_back
#define SH std::cout <<
#define LN << '\n'
#define RD std::cin >>
#define va std::vector<auto>

using namespace std;
typedef std::vector<int> vi;
template <typename _A, typename _B> using umap = unordered_map<_A, _B>;
template <typename T> using v = vector<T>;

template <typename T> void RD_VC(v<T> &a, int n) {}

// starting from 0, 0 find number of horse moves to reach x, y
auto solve(int x, int y) {
  if (x == 0 && y == 0)
    return 0;
  if (x == 0 && y > 0)
    return y / 2 + y % 2;
  if (y == 0 && x > 0)
    return x / 2 + x % 2;
  if (x == 2 * y || y == 2 * x)
    return min(x, y);
  return -1;
}

// generated by oj-template v4.8.1
// (https://github.com/online-judge-tools/template-generator)
int main() {
  std::ios::sync_with_stdio(false);
  std::cin.tie(nullptr);
  int n;
  std::cin >> n;
  std::vector<int64_t> a(n);
  REP(i, n) {
    int x, y;
    std::cin >> x >> y;
    cout << solve(x, y) << endl;
  }
  return 0;
}
